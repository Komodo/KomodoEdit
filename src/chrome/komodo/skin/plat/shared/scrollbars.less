@import url("chrome://komodo/skin/_config/scrollbars.less");

/* Scrollbar Helper */
.scrollbar(@id)
{
    .appearance(@id, @elem, @state)
    {
        -moz-appearance: ~"@{scrollbar-@{id}-@{elem}-appearance}" !important;
        background: ~"@{scrollbar-@{id}-@{elem}-background@{state}}";
        transition: ~"@{scrollbar-@{id}-@{elem}-transition}";
        visibility: ~"@{scrollbar-@{id}-@{elem}-visibility}";
        border-radius: ~"@{scrollbar-@{id}-@{elem}-border-radius@{state}}";
        border: ~"@{scrollbar-@{id}-@{elem}-border@{state}}";
    }

    .sizing(@id, @elem, @orient, @state)
    {
        margin: ~"@{scrollbar-@{id}-@{orient}-@{elem}-margin@{state}}";
        height: ~"@{scrollbar-@{id}-@{orient}-@{elem}-height@{state}}";
        width: ~"@{scrollbar-@{id}-@{orient}-@{elem}-width@{state}}";
    }

    .rules(@id, @orient)
    {
        .appearance(@id, wrapper, "");
        .sizing(@id, wrapper, @orient, "");

        slider {
            .appearance(@id, slider, "");
            .sizing(@id, slider, @orient, "");
        }
        thumb {
            .appearance(@id, thumb, "");
            .sizing(@id, thumb, @orient, "");
        }
        thumb:hover {
            .appearance(@id, thumb, -hover);
            .sizing(@id, thumb, @orient, -hover);
        }

        &:hover
        {
            .appearance(@id, wrapper, -hover);
            .sizing(@id, wrapper, @orient, -hover);

            slider {
                .appearance(@id, slider, -hover);
                .sizing(@id, slider, @orient, -hover);
            }
        }
    }

    &[orient="horizontal"]
    {
        .rules(@id, x);

        thumb {
            min-width: 25px;
        }
    }

    &[orient="vertical"]
    {
        .rules(@id, y);

        thumb {
            min-width: 0;
            min-height: 25px;
        }
    }

    scrollbarbutton[type="increment"] { .appearance(@id, button-inc, ""); }
    scrollbarbutton[type="decrement"] { .appearance(@id, button-dec, ""); }

}

/* Scrollbar definitions */

scrollbar:not([for="scintilla"]) { .scrollbar(default); }

// Can't use .widget here as this class is not added until after the document
// is loaded and scrollbars apparently don't like having their style changed
// after being loaded
page scrollbar:not([for="scintilla"])
{
    .scrollbar(pane);
    opacity: 0.3;

    &[orient="vertical"]
    {
        position: relative;
        z-index: 999;
        margin-left: (0 - @scrollbar-pane-y-wrapper-width);
    }
}
page:hover scrollbar:not([for="scintilla"]) { opacity: 1.0; }

/* Mainly intended for commando result richlistbox, where we need to force
   scrollbar visibility manually because XUL flex and scrolling do not go well
   together */
richlistbox:not(.scrollable) scrollbar
{
    visibility: collapse;
}
