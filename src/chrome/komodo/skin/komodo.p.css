/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 * 
 * The contents of this file are subject to the Mozilla Public License
 * Version 1.1 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 * 
 * Software distributed under the License is distributed on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * License for the specific language governing rights and limitations
 * under the License.
 * 
 * The Original Code is Komodo code.
 * 
 * The Initial Developer of the Original Code is ActiveState Software Inc.
 * Portions created by ActiveState Software Inc are Copyright (C) 2000-2007
 * ActiveState Software Inc. All Rights Reserved.
 * 
 * Contributor(s):
 *   ActiveState Software Inc
 * 
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 * 
 * ***** END LICENSE BLOCK ***** */
@import url("chrome://global/skin/");
@import url("chrome://komodo/skin/unifiedWindow.css");  /* only exists on Mac */
@import url("chrome://komodo/skin/splitter.css");

/* ::::: fullscreen window controls ::::: */

#window-controls {
  -moz-box-align: center;
  padding: 0 2px 0 4px;
}

/* Support full screen toolbar auto-hide */
#toolbox_main {
  -moz-binding: url("chrome://komodo/content/bindings/toolbar.xml#toolbox");
}
#toolbox_main[_fullscreen] > [anonid="children-box"] {
  height: 0;
  overflow-y: hidden;
  -moz-transition-duration: 5s;
  -moz-transition-delay: 0.25s;
}
#toolbox_main[_fullscreen]:hover > [anonid="children-box"] {
  height: initial;
  -moz-transition-duration: 5s;
  -moz-transition-delay: 0.25s;
}
#toolbox_main:not([_fullscreen]) > [anonid="hover-box"] {
  visibility: collapse;
}
#toolbox_main[_fullscreen] > [anonid="hover-box"] {
  height: 1px;
  margin-bottom: 0;
}
/* when in fullscreen mode, hide menubars, toolbars, and statusbars that are
   not marked with [fullscreentoolbar], except those that are immediate children
   of the main toolbox row. */
/* #if PLATFORM == "darwin" */
[sizemode="kofullscreen"]:root :not(#main-toolboxrow) > :-moz-any(menubar, toolbar, statusbar):not([fullscreentoolbar]) {
  visibility: collapse;
}
/* #else */
[sizemode="fullscreen"]:root :not(#main-toolboxrow) > :-moz-any(menubar, toolbar, statusbar):not([fullscreentoolbar]) {
  visibility: collapse;
}
/* #endif */
/* when not in fullscreen mode, hide any elements marked as [fullscreencontrol]
   (i.e. those that should only be shown in full screen) */
:root:not([sizemode="fullscreen"]) [fullscreencontrol] {
  display: none;
}

#toolbox_main #toolbar-menubar {
  padding-top: 0;
}

#menubar_main {
  -moz-appearance: menubar;
  padding-top: 0;
}

#menubar_main > #window-controls > toolbarbutton {
  -moz-appearance: none;
}

#menubar_main > #window-controls > toolbarbutton:hover {
  border-color: transparent;
}

#minimize-button {
  list-style-image: url("chrome://global/skin/icons/Minimize.gif");
}

#restore-button {
  list-style-image: url("chrome://global/skin/icons/Restore.gif");
}

#close-button {
  list-style-image: url("chrome://global/skin/icons/Close.gif");
}

/* #if PLATFORM == "darwin" */
/* OS X 10.6 is Darwin 10.* */
:root:not([os-version^="10."]) #fullscreen-restore-button {
  display: none;
}
#fullscreen-restore-button {
  list-style-image: url("chrome://global/skin/media/fullscreenButton.png");
  -moz-image-region: rect(0px, 32px, 16px, 16px);
}
@media screen and (min-resolution: 2dppx) {
  #fullscreen-restore-button {
    list-style-image: url("chrome://global/skin/media/fullscreenButton@2x.png");
    -moz-image-region: rect(0px, 64px, 32px, 32px);
  }
}
/* #endif */

toolbar[printpreview="true"] {
  -moz-binding: url("chrome://global/content/printPreviewBindings.xml#printpreviewtoolbar");
}

#main-toolboxrow {
  min-width: 1px;
  -moz-appearance: toolbar;
  border-bottom: 1px solid ThreeDShadow;
  -moz-binding: url('chrome://komodo/content/bindings/toolbar.xml#toolboxrow-overflow');
}

#main-toolboxrow > [first-overflow] ~ *,
#main-toolboxrow > [first-overflow] [first-child-overflow],
#main-toolboxrow > [first-overflow] [first-child-overflow] ~ * {
  /* things that would overflow in the toolboxrow */
  visibility: hidden;
}

#main-toolboxrow > .overflow-toolbarbutton > .toolbarbutton-menu-dropmarker {
  /* the dropmarker on the toolboxrow overflow button */
  visibility: collapse;
}

#main-toolboxrow .overflow-menupopup [disabled] .menu-iconic-icon {
  opacity: 0.5;
}

#main-toolboxrow > toolbar {
  -moz-appearance: none;
  border: none;
}

#noPreviewAvailable 
{
  background-color: white !important;
  font-size: 12px !important;
}
 
/* ::::: tooltip :::::
  copied from popup.css, but modified to be a class rather than
  element name.  */

popup[type="tooltip"] {
  -moz-binding: url('chrome://komodo/content/bindings/widgets.xml#kotooltip');
  -moz-appearance: tooltip;
  margin-top: 11px;
  border: 1px solid InfoText;
  padding: 2px 3px;
  max-width: 40em;
  background-color: InfoBackground;
  color: InfoText;
  font: message-box;
}

.tooltip-label {
  margin: 0px !important;
}

label[highlite="true"],
statusbarpanel[highlite="true"] {
  margin: 0px;
  padding: 0px;
}

statusbarpanel label[highlite="true"],
statusbarpanel[highlite="true"] > label {
  color: highlighttext;
  background-color: highlight;
  margin: 0px 0px 0px 0px;
  padding: 1px 10px 2px 10px;
}

menu.statusbar-label > label,
menuitem.statusbar-label > label
{
  font: status-bar;
  text-align: left;
}
statusbarpanel > toolbarbutton {
  padding: 0px;
  margin: 0px;
  border-style: none;
  -moz-appearance: none;
}
statusbarpanel > toolbarbutton > .toolbarbutton-text {
  font: status-bar;
  text-align: left;
  padding-left: 6px;
  padding-right: 2px;
}
statusbarpanel > toolbarbutton[type="menu"] > dropmarker {
  /*
   The moz appearance is necessary to override the additional image provided
   by the toolbarbutton menu image (provided through a xbl binding).
   http://bugs.activestate.com/show_bug.cgi?id=79320
  */
  -moz-appearance: none !important;
  list-style-image: url("chrome://komodo/skin/images/menupopup_arrows.png");
}

#statusbar-language-menu > image
{
  width: 16px;
  height: 16px;
}


/**
 * Status bar messages
 */

#statusbar-message-wrap, #statusbar-message, #statusbar-message > label {
  border: none;
  min-width: 0;
  width: 0;
  -moz-appearance: none;
  -moz-box-flex: 1;
  -moz-box-pack: start;
}

#statusbar-message-wrap button.close-button {
  margin: 0 !important;
  padding: 0 !important;
  min-width: 0;
}

#statusbar-message[category="notification-info"] {
    list-style-image: url("chrome://global/skin/icons/information-16.png");
}

#statusbar-message[category="notification-warning"] {
    list-style-image: url("chrome://global/skin/icons/warning-16.png");
}

#statusbar-message[category="notification-error"] {
    list-style-image: url("chrome://global/skin/icons/error-16.png");
}


/**
 * Syntax checking statusbar images.
 */
#statusbar-check.syntax-okay {
    list-style-image: url("chrome://komodo/skin/images/icon_check_ok.png");
}

#statusbar-check.syntax-in-progress {
    list-style-image: url("chrome://komodo/skin/images/icon_check_inprogress.png");
}

#statusbar-check.syntax-warning {
    list-style-image: url("chrome://komodo/skin/images/icon_check_warning.png");
}

#statusbar-check.syntax-error {
    list-style-image: url("chrome://komodo/skin/images/icon_check_error.png");
}

/**
 * Statusbar spacing
 */

#statusbar-line-col, #statusbar-selection {
    min-width: 100px !important;
}

#statusbar-encoding {
    min-width: 8em;
    max-width: 8em;
}

#statusbar-language {
    min-width: 8em;
    max-width: 10em;
}

#statusbar-section {
    min-width: 150px !important;
}

/**
 * Language icons for the language menulists and tree views.
 */
.languageicon,
treechildren::-moz-tree-image(DefaultLanguage) {
  /* The default language icon. */
  list-style-image: url("koicon://ko-language/Text?size=24");
}
menuitem.languageicon {
  height: 32px;
}
menuitem.languageicon image {
  /* Push the image to the right of the menuitem checkbox. */
  margin-left: 24px;
  max-width: 24px !important;
  width: 24px !important;
  height: 24px !important;
}

menupopup menupopup menuitem.languageicon {
  height: 24px;
}
menupopup menupopup menuitem.languageicon image {
  /* Push the image to the right of the menuitem checkbox. */
  margin-left: 16px;
  max-width: 16px !important;
  width: 16px !important;
  height: 16px !important;
}
treechildren::-moz-tree-image(DefaultLanguage) {
  /* Put spacing around the tree images. */
  margin-left: 3px;
  margin-right: 3px;
}

.languageicon[language="ActionScript"],
treechildren::-moz-tree-image(LanguageActionScript) {
  list-style-image: url("koicon://ko-language/ActionScript?size=24") !important;
}
.languageicon[language="C++"],
treechildren::-moz-tree-image(LanguageC) {
  list-style-image: url("koicon://ko-language/C++?size=24");
}
.languageicon[language="CoffeeScript"],
treechildren::-moz-tree-image(LanguageCoffeeScript) {
  list-style-image: url("koicon://ko-language/CoffeeScript?size=24");
}
.languageicon[language="CSS"],
treechildren::-moz-tree-image(LanguageCSS) {
  list-style-image: url("koicon://ko-language/CSS?size=24");
}
.languageicon[language="Django"],
treechildren::-moz-tree-image(LanguageDjango) {
  list-style-image: url("koicon://ko-language/Django?size=24");
}
.languageicon[language="EJS"],
treechildren::-moz-tree-image(LanguageEJS) {
  list-style-image: url("koicon://ko-language/EJS?size=24");
}
.languageicon[language="epMojo"],
treechildren::-moz-tree-image(LanguageepMojo) {
  list-style-image: url("koicon://ko-language/epMojo?size=24");
}
.languageicon[language="HTML"],
treechildren::-moz-tree-image(LanguageHTML) {
  list-style-image: url("koicon://ko-language/HTML?size=24");
}
.languageicon[language="HTML5"],
treechildren::-moz-tree-image(LanguageHTML5) {
  list-style-image: url("koicon://ko-language/HTML5?size=24");
}
.languageicon[language="JavaScript"],
treechildren::-moz-tree-image(LanguageJavaScript) {
  list-style-image: url("koicon://ko-language/JavaScript?size=24");
}
.languageicon[language="JSON"],
treechildren::-moz-tree-image(LanguageJSON) {
  list-style-image: url("koicon://ko-language/JSON?size=24");
}
.languageicon[language="Laravel"],
treechildren::-moz-tree-image(LanguageLaravel),
.languageicon[language="LaravelBlade"],
treechildren::-moz-tree-image(LanguageLaravelBlade) {
  list-style-image: url("koicon://ko-language/LaravelBlade?size=24");
}
.languageicon[language="Less"],
treechildren::-moz-tree-image(LanguageLess) {
  list-style-image: url("koicon://ko-language/Less?size=24");
}
.languageicon[language="MXML"],
treechildren::-moz-tree-image(LanguageMXML) {
  list-style-image: url("koicon://ko-language/MXML?size=24");
}
.languageicon[language="Node.js"],
treechildren::-moz-tree-image(LanguageNodejs) {
  list-style-image: url("koicon://ko-language/Node.js?size=24");
}
.languageicon[language="Perl"],
treechildren::-moz-tree-image(LanguagePerl) {
  list-style-image: url("koicon://ko-language/Perl?size=24");
}
.languageicon[language="PHP"],
treechildren::-moz-tree-image(LanguagePHP) {
  list-style-image: url("koicon://ko-language/PHP?size=24");
}
.languageicon[language="Python"],
treechildren::-moz-tree-image(LanguagePython) {
  list-style-image: url("koicon://ko-language/Python?size=24");
}
.languageicon[language="Python3"],
treechildren::-moz-tree-image(LanguagePython3) {
  list-style-image: url("koicon://ko-language/Python3?size=24");
}
.languageicon[language="RHTML"],
treechildren::-moz-tree-image(LanguageRHTML) {
  list-style-image: url("koicon://ko-language/RHTML?size=24");
}
.languageicon[language="Ruby"],
treechildren::-moz-tree-image(LanguageRuby) {
  list-style-image: url("koicon://ko-language/Ruby?size=24");
}
.languageicon[language="Sass"],
treechildren::-moz-tree-image(LanguageSass),
.languageicon[language="SCSS"],
treechildren::-moz-tree-image(LanguageSCSS) {
  list-style-image: url("koicon://ko-language/SCSS?size=24");
}
.languageicon[language="Tcl"],
treechildren::-moz-tree-image(LanguageTcl) {
  list-style-image: url("koicon://ko-language/Tcl?size=24");
}
.languageicon[language="Twig"],
treechildren::-moz-tree-image(LanguageTwig) {
  list-style-image: url("koicon://ko-language/Twig?size=24");
}
.languageicon[language="XML"],
treechildren::-moz-tree-image(LanguageXML) {
  list-style-image: url("koicon://ko-language/XML?size=24");
}
.languageicon[language="XSLT"],
treechildren::-moz-tree-image(LanguageXSLT) {
  list-style-image: url("koicon://ko-language/XSLT?size=24");
}
.languageicon[language="XBL"],
treechildren::-moz-tree-image(LanguageXBL),
.languageicon[language="XUL"],
treechildren::-moz-tree-image(LanguageXUL) {
  list-style-image: url("koicon://ko-language/XUL?size=24");
}


.primary_menu_item {
    font-weight: bold;
}

.thin-inset-border,
.thin-outset-border,
.zero-space {
    margin: 0px;
    padding: 0px;
}

.no-border {
    margin: 0px;
    padding: 0px;
    border: none;
}

.blank-workspace {
    margin: 0px;
    padding: 0px;
    background-color: appworkspace;
}


/* groovy separator (0 padding, for dividing effects)
   XXX This was the only thing needed from the old KomodoDialog.css. Should
       this be in its own dialog.css?
*/
separator.groovy-thin
{
    border-top: 1px solid threedshadow;
    border-bottom: 1px solid threedhighlight;
    height: 0px;
}

/* add some exra space between a tab icon and the tab text */
tab > .tab-text {
  padding-left: 3px;
  padding-right: 3px;
}

#gotoLine_error_hbox {
    background-color: #FFF1A8;
}
#gotoLine_error_image {
    list-style-image: url('chrome://famfamfamsilk/skin/icons/error.png');
}

/* Notifications / progress button */
#statusbar-throbber {
    -moz-box-align: center;
}
#statusbar-throbber:not([active]) {
    visibility: collapse;
}

#statusbar-throbber-inner
{
    margin: 2px 4px 0;
    width: 12px;
    height: 12px;
    background: #999999;
}

#statusbar-throbber[active] #statusbar-throbber-inner {
    animation: throbber 0.5s linear infinite;
}

@keyframes throbber {
    0%   { opacity:1; transform: scale(0.1); }
    100% { opacity:0; transform: scale(1.0); }
}


/* toolbox2 styles */
treechildren#toolbox2-hierarchy-treebody::-moz-tree-image {
    padding-right: 4px;
}

/**
 * Goto line panel styling.
 */
#gotoLine_panel {
}

#gotoLine_vbox {
    padding: 4px;
}

#gotoLine_description {
}

.file-status-icons-end {
  margin: 0 0 0 2px;
}

.file-readonly-icon[file_readonly="readonly"] {
  list-style-image : url("chrome://komodo/skin/images/status_icon_readonly_16x16.png");
  margin: 7px -3px 0 2px;
}

.native_file_image[alt_image="browser"] {
  list-style-image : url("chrome://komodo/skin/images/preview_in_browser.png");
}
.native_file_image[alt_image="async_operation"] {
  list-style-image : url("chrome://global/skin/icons/loading_16.png");
}

.file-status2-icon:not([file_status2]),
.file-readonly-icon:not([file_readonly]) {
  /* Collapse status images that are not showing anything. */
  display: none;
}

/* #if PLATFORM == "linux" */
#changeTracker_undo {
    min-height: 24px;
}
/* #endif */
