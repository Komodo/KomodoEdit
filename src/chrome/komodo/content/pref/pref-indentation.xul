<?xml version="1.0"?>
<!DOCTYPE window SYSTEM "http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul" [
  <!ENTITY % prefDTD SYSTEM "chrome://komodo/locale/pref/pref.dtd">
  %prefDTD;
]>

<!-- ***** BEGIN LICENSE BLOCK *****
 Version: MPL 1.1/GPL 2.0/LGPL 2.1
 
 The contents of this file are subject to the Mozilla Public License
 Version 1.1 (the "License"); you may not use this file except in
 compliance with the License. You may obtain a copy of the License at
 http://www.mozilla.org/MPL/
 
 Software distributed under the License is distributed on an "AS IS"
 basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 License for the specific language governing rights and limitations
 under the License.
 
 The Original Code is Komodo code.
 
 The Initial Developer of the Original Code is ActiveState Software Inc.
 Portions created by ActiveState Software Inc are Copyright (C) 2000-2007
 ActiveState Software Inc. All Rights Reserved.
 
 Contributor(s):
   ActiveState Software Inc
 
 Alternatively, the contents of this file may be used under the terms of
 either the GNU General Public License Version 2 or later (the "GPL"), or
 the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 in which case the provisions of the GPL or the LGPL are applicable instead
 of those above. If you wish to allow use of your version of this file only
 under the terms of either the GPL or the LGPL, and not to allow others to
 use your version of this file under the terms of the MPL, indicate your
 decision by deleting the provisions above and replace them with the notice
 and other provisions required by the GPL or the LGPL. If you do not delete
 the provisions above, a recipient may use your version of this file under
 the terms of any one of the MPL, the GPL or the LGPL.
 
 ***** END LICENSE BLOCK ***** -->

<?xml-stylesheet href="chrome://komodo/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://komodo/skin/bindings/widgets.css" type="text/css"?>
<?xml-stylesheet href="chrome://komodo/skin/prefs/prefs.css" type="text/css"?>

<window xmlns:html="http://www.w3.org/1999/xhtml"
        xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
        class="kodialog pref-window"
        orient="vertical"
        onload="MyOnload();">

    <script src="chrome://xtk/content/xtk.js" type="application/x-javascript;version=1.7"/>
    <script src="chrome://komodo/content/library/logging.js" type="application/x-javascript;version=1.7"/>
    <script src="chrome://komodo/content/pref/koPrefUtils.js" type="application/x-javascript;version=1.7" />
    <script type="application/x-javascript;version=1.7">
    <![CDATA[
var log = ko.logging.getLogger("pref-indent");
var langData = {};
var curLang = null;
var g_prefset = null;

function MyOnload() {
        // register with preferences
        parent.hPrefWindow.onpageload();
    
}
function OnPreferencePageInitalize(prefset) {
    log.info("OnPreferencePageInitalize");
    g_prefset = prefset;
    if (parent.prefInvokeType != "global") {
        return;
    }
    try {
        var langToUse;
        var view = getKoObject('views').manager.currentView;
        if (view)
            langToUse = view.koDoc.language;
        else   // default
            langToUse = "Text";

        changeNewLanguage(null, langToUse);
    } catch(ex) {
        log.error(ex);
    }
}
function OnPreferencePageOK(prefset)  {
    log.info("OnPreferencePageOK");
    if (parent.prefInvokeType != "global") {
        return true;
    }
    // save any updated prefs
    try {
        changeNewLanguage(null,null);
        for (var language in langData) {
            var o = langData[language];
            var prefix = 'languages/' + language + '/';
            if (o.useTabs != o.defaults.useTabs)
                prefset.setBoolean(prefix+'useTabs', o.useTabs);
            if (o.tabWidth != o.defaults.tabWidth)
                prefset.setLong(prefix+'tabWidth', o.tabWidth);
            if (o.indentWidth != o.defaults.indentWidth)
                prefset.setLong(prefix+'indentWidth', o.indentWidth);
        }
        return true;
    } catch(e) {
        log.exception(e);
        return ignorePrefPageOKFailure(prefset,
                                       "Trying to save global indentation settings triggered an exception",
                                       e.toString());
    }
}

function getPrefsForLanguage(name) {
    if (name in langData) {
        return langData[name];
    }
    var prefix = 'languages/' + name + '/';
    var o = {};
    o.name = name;
    // get the defaults
    o.defaults = {};
    o.useTabs = o.defaults.useTabs =
        g_prefset.getBoolean(prefix+'useTabs', g_prefset.getBoolean('useTabs', false));
    o.tabWidth = o.defaults.tabWidth =
        g_prefset.getLong(prefix+'tabWidth', g_prefset.getLong('tabWidth', false));
    o.indentWidth = o.defaults.indentWidth =
        g_prefset.getLong(prefix+'indentWidth', g_prefset.getLong('indentWidth', false));
    langData[name] = o;
    return o;
}
function changeNewLanguage(item, name)  {
    var langlist = document.getElementById("langList");

    if (!name) name = langlist.selection;
    else if (item == null) langlist.selection = name;

    // store old data
    if (curLang) {
        curLang.useTabs = document.getElementById('useTabsLang').checked;
        curLang.tabWidth = document.getElementById('tabWidthLang').value;
        curLang.indentWidth = document.getElementById('indentWidthLang').value;
    }
    curLang = getPrefsForLanguage(name);

    // set new data
    document.getElementById('useTabsLang').checked = curLang.useTabs;
    document.getElementById('tabWidthLang').value = curLang.tabWidth;
    document.getElementById('indentWidthLang').value = curLang.indentWidth;
}

]]>
    </script>

    <!-- This main vbox is to ensure *all* the pref widgets are accessible,
         as it adds a scrollbar when the contents are too long. -->
    <vbox id="indentation-prefs-vbox" flex="1" class="autoscroll">

        <groupbox orient="vertical">
            <caption label="&indentationGlobalSettings.label;"
                  class="load-context-check" showIfLoadContext="global"/>
            <caption label="&indentation.label;"
                  class="load-context-check" hideIfLoadContext="global"/>
      
            <hbox align="center"
                  class="load-context-check" showIfLoadContext="global">
              <label value="&autoIndentStyle.label;"/>
              <menulist id="editAutoIndentStyle" pref="true" prefattribute="data">
                  <menupopup>
                      <menuitem data="smart" label="&useSmartIndent.label;"/>
                      <menuitem data="plain" label="&indentToFirstNonEmptyColumn.label;"/>
                      <menuitem data="none" label="&donTAutoIndent.label;"/>
                  </menupopup>
              </menulist>
            </hbox>
      
            <checkbox id="editElectricBrace" label="&autoAdjustClosingBraces.label;" pref="true"
                        prefstring="editElectricBrace" prefattribute="checked"/>
      
                  <checkbox id="showIndentationGuides" label="&showIndentationGuides.label;"
                           pref="true" prefstring="showIndentationGuides"
                           prefattribute="checked"/>
      
                  <checkbox id="useSmartTabs" label="&allowFileContentsToOverrideTabSettings.label;"
                      pref="true" prefstring="useSmartTabs"
                      prefattribute="checked"/>
		  
            <!-- space helps re-inforce "smart-tabs" may override the rest -->
                  <checkbox id="indentStringsAfterParens" label="&indentStringsAfterParens.label;"
                      pref="true" prefstring="indentStringsAfterParens"
                      prefattribute="checked"
                      class="load-context-check advanced" showIfLoadContext="global"/>
      
                  <checkbox id="dedentOnColon" label="&dedentOnColon.label;"
                      pref="true" prefstring="dedentOnColon"
                      prefattribute="checked"
                      class="load-context-check advanced" showIfLoadContext="global"/>
      
            <checkbox id="useTabs"
                      label="&preferTabCharactersOverSpaces.label;"
                      pref="true"
                      prefstring="useTabs"
                      prefattribute="checked"/>
      
            <hbox align="center">
                <textbox id="indentWidth" size="3" wsm_persist="true"
                           pref="true" prefstring="indentWidth"
                           prefattribute="value"/>
                <text value="&filePrefIndentationSpacePerIndent.label;"/>
            </hbox>
            <hbox align="center">
                <textbox id="tabWidth" size="3" wsm_persist="true"
                           pref="true" prefstring="tabWidth"
                           prefattribute="value"/>
                <text value="&filePrefIndentationWhidtTabChar.label;"/>
      
            </hbox>
      
      
            <checkbox id="editBackspaceDedents" label="&backspaceDecreasesIndentationInLeadingWhitespace.label;" pref="true"
                      prefstring="editBackspaceDedents" prefattribute="checked"/>
      
        </groupbox>
      
        <groupbox orient="vertical"
                  class="load-context-check advanced" showIfLoadContext="global">
            <caption label="&indentation-per-language.label;"/>
            <langlist id="langList" class="lang-menulist"
                      oncommand="changeNewLanguage(this, null)"/>
            <checkbox id="useTabsLang"
                      label="&preferTabCharactersOverSpaces.label;"/>
            <hbox align="center">
                <textbox id="indentWidthLang" size="3"/>
                <text value="&filePrefIndentationSpacePerIndent.label;"/>
            </hbox>
            <hbox align="center">
                <textbox id="tabWidthLang" size="3"/>
                <text value="&filePrefIndentationWhidtTabChar.label;"/>
            </hbox>
        </groupbox>

    </vbox>

</window>
