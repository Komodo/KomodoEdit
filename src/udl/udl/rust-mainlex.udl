language Rust

family markup
initial IN_M_DEFAULT
# Null-transition to get into SSL state
state IN_M_DEFAULT:
/./ : redo, => IN_SSL_DEFAULT


family ssl
start_style SSL_DEFAULT
end_style SSL_VARIABLE

keyword_style SSL_IDENTIFIER => SSL_WORD

keywords [
    '_', 'abstract', 'alignof', 'as', 'become', 'box', 'break', 'const',
    'continue', 'crate', 'do', 'else', 'enum', 'extern', 'false', 'final',
    'fn', 'for', 'if', 'impl', 'in', 'let', 'loop', 'macro',
    'match', 'mod', 'move', 'mut', 'offsetof', 'override', 'priv', 'proc',
    'pub', 'pure', 'ref', 'return', 'Self', 'self', 'sizeof',
    'static', 'struct', 'super', 'trait', 'true', 'type', 'typeof',
    'unsafe', 'unsized', 'use', 'virtual', 'where', 'while', 'yield'
]

pattern WS = '\s\t\r\n'
pattern FIRSTNAMECHAR = '_a-zA-Z\x80-\xff'
pattern NAMECHAR = '$FIRSTNAMECHAR\d'
pattern OP = '!\$%&\(\)\*\+,-\/:;<=>\?@\[\]\^\{\}~|'

state IN_SSL_DEFAULT:
/[$WS]+/: # stay
# comments
'//': paint(upto, SSL_DEFAULT), => IN_SSL_COMMENT_1
'#': paint(upto, SSL_DEFAULT), => IN_SSL_COMMENT_1
'/*': paint(upto, SSL_DEFAULT), => IN_SSL_COMMENT_2

# strings and lifetime literals
'"': paint(upto, SSL_DEFAULT), => IN_SSL_DSTRING
'\'': paint(upto, SSL_DEFAULT), => IN_SSL_SSTRING

# identifiers and keywords
/[$FIRSTNAMECHAR][$NAMECHAR]*/: paint(upto, SSL_DEFAULT), => IN_SSL_IORO

# numbers
/0[Xx][0-9a-fA-F]+/ : paint(upto, SSL_DEFAULT), paint(include, SSL_NUMBER)  # Hex numbers
/[-+]?\d/ : paint(upto, SSL_DEFAULT), => IN_SSL_NUMBER_1
/[-+]?\.\d/ : paint(upto, SSL_DEFAULT), => IN_SSL_NUMBER_2

# operators
/%(\\\/|\\*|in|o|x)?%/ : paint(upto, SSL_DEFAULT), paint(include, SSL_OPERATOR)
/[$OP]/ : paint(upto, SSL_DEFAULT), paint(include, SSL_OPERATOR)

# === custom states ===


# comments
state IN_SSL_COMMENT_1:
/[\r\n]/: paint(upto, SSL_COMMENT), => IN_SSL_DEFAULT

state IN_SSL_COMMENT_2:
'*/': paint(include, SSL_COMMENTBLOCK), => IN_SSL_DEFAULT

# strings and lifetime literals
state IN_SSL_DSTRING:
'"': paint(include, SSL_STRING), => IN_SSL_DEFAULT

state IN_SSL_SSTRING:
'\'': paint(include, SSL_STRING), => IN_SSL_DEFAULT
/[$WS]+/: paint(upto, SSL_STRING), => IN_SSL_DEFAULT
/[$OP]+/: paint(upto, SSL_STRING), redo, => IN_SSL_DEFAULT


# identifiers and keywords
state IN_SSL_IORO:
'!': paint(include, SSL_OPERATOR), => IN_SSL_DEFAULT
/[$FIRSTNAMECHAR][$NAMECHAR]*/: # stay
/$/: paint(upto, SSL_IDENTIFIER), => IN_SSL_DEFAULT
/./: paint(upto, SSL_IDENTIFIER), redo, => IN_SSL_DEFAULT

# numbers
state IN_SSL_NUMBER_1 :
/$/ : paint(upto, SSL_NUMBER), => IN_SSL_DEFAULT
'.' : => IN_SSL_NUMBER_2
/[\d]/ : #stay
/[Ee][-+]?/ : => IN_SSL_NUMBER_3
/./ : paint(upto, SSL_NUMBER), redo, => IN_SSL_DEFAULT

state IN_SSL_NUMBER_2:
/$/ : paint(upto, SSL_NUMBER), => IN_SSL_DEFAULT
/[\d]/ : #stay
/[Ee][-+]?/ : => IN_SSL_NUMBER_3
'.' : paint(include, SSL_NUMBER),  => IN_SSL_DEFAULT # [1..2]
/./ : paint(upto, SSL_NUMBER), redo, => IN_SSL_DEFAULT

state IN_SSL_NUMBER_3:
/$/ : paint(upto, SSL_NUMBER), => IN_SSL_DEFAULT
/[^\d]/ : paint(upto, SSL_NUMBER), redo, => IN_SSL_DEFAULT
